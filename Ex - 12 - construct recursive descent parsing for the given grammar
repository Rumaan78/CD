#include <stdio.h>
#include <string.h>
#include <ctype.h>

char input[100];
int i = 0;

int E(), Eprime(), T(), Tprime(), F();

int E() {
    if (T()) return Eprime();
    return 0;
}

int Eprime() {
    if (input[i] == '+') {
        i++;
        if (T()) return Eprime();
        return 0;
    }
    return 1; // epsilon
}

int T() {
    if (F()) return Tprime();
    return 0;
}

int Tprime() {
    if (input[i] == '*') {
        i++;
        if (F()) return Tprime();
        return 0;
    }
    return 1; // epsilon
}

int F() {
    if (input[i] == '(') {
        i++;
        if (E() && input[i] == ')') {
            i++;
            return 1;
        }
        return 0;
    }
    else if (isalpha(input[i])) { // ID
        i++;
        return 1;
    }
    return 0;
}

int main() {
    printf("Recursive descent parsing for the following grammar\n\n");
    printf("E->TE'\n");
    printf("E'->+TE'/@\n");
    printf("T->FT'\n");
    printf("T'->*FT'/@\n");
    printf("F->(E)/ID\n");

    printf("\nEnter the string to be checked: ");
    scanf("%s", input);

    if (E() && input[i] == '\0')
        printf("\nString is accepted\n");
    else
        printf("\nString is not accepted\n");

    return 0;
}
