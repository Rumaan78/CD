#include <stdio.h>
#include <string.h>

char stack[50], input[50];
int top = -1;

void push(char c) {
    stack[++top] = c;
    stack[top+1] = '\0';
}

void pop(int n) {
    top -= n;
    stack[top+1] = '\0';
}

void printStep(char *inp, char *act) {
    printf("%-15s\t%-15s\t%s\n", stack, inp, act);
}

int main() {
    int i = 0;
    printf("\n\t\tSHIFT REDUCE PARSER\n");
    printf("\nGRAMMAR\n");
    printf("E->E+E\nE->E/E\nE->E*E\nE->a/b\n");

    printf("Enter the input symbol: ");
    scanf("%s", input);

    strcat(input, "$");   // append end marker
    push('$');

    printf("\n\tstack\t\tinput symbol\t\taction\n");

    printStep(input, "--");

    while (1) {
        if (input[i] == 'a' || input[i] == 'b') {
            push(input[i]);
            i++;
            printStep(input + i, "shift");
            pop(1);
            push('E');
            printStep(input + i, "E->id");
        }
        else if (input[i] == '+' || input[i] == '*' || input[i] == '/') {
            push(input[i]);
            i++;
            char act[10];
            sprintf(act, "shift%c", stack[top]);
            printStep(input + i, act);
        }
        else if (strcmp(stack + top - 2, "E+E") == 0 ||
                 strcmp(stack + top - 2, "E*E") == 0 ||
                 strcmp(stack + top - 2, "E/E") == 0) {
            pop(3);
            push('E');
            printStep(input + i, "E->E?E");
        }
        else if (stack[top] == 'E' && input[i] == '$' && stack[0] == '$' && stack[1] == 'E') {
            printStep(input + i, "ACCEPT");
            break;
        }
        else {
            i++;
        }
    }
    return 0;
}
