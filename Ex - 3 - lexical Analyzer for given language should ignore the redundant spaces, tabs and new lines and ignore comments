#include <stdio.h>
#include <ctype.h>
#include <string.h>

char keywords[8][10] = {"int", "main", "printf", "return", "if", "else", "while", "for"};
char operators[] = "+-*/=%";

int isKeyword(char *word) {
    for (int i = 0; i < 8; i++) {
        if (strcmp(word, keywords[i]) == 0)
            return 1;
    }
    return 0;
}

int isOperator(char ch) {
    for (int i = 0; operators[i] != '\0'; i++) {
        if (ch == operators[i])
            return 1;
    }
    return 0;
}

int main() {
    char code[1000], buffer[50];
    char ch;
    int i = 0, j;

    printf("Enter your code (end with $ symbol):\n");

    // Read input until '$' is entered
    while ((ch = getchar()) != '$' && ch != EOF) {
        code[i++] = ch;
    }
    code[i] = '\0';

    // Process the code
    i = 0;
    while (code[i] != '\0') {
        // Ignore spaces, tabs, newlines
        if (code[i] == ' ' || code[i] == '\t' || code[i] == '\n') {
            i++;
            continue;
        }

        // Identifiers / Keywords
        if (isalpha(code[i])) {
            j = 0;
            while (isalnum(code[i]) || code[i] == '_') {
                buffer[j++] = code[i++];
            }
            buffer[j] = '\0';
            if (isKeyword(buffer))
                printf("%s is keyword\n", buffer);
            else
                printf("%s is identifier\n", buffer);
            continue;
        }

        // Numbers
        if (isdigit(code[i])) {
            j = 0;
            while (isdigit(code[i])) {
                buffer[j++] = code[i++];
            }
            buffer[j] = '\0';
            printf("%s is number\n", buffer);
            continue;
        }

        // Operators
        if (isOperator(code[i])) {
            printf("%c is operator\n", code[i]);
            i++;
            continue;
        }

        // Special case for %
        if (code[i] == '%') {
            printf("%% is operator\n");
            i++;
            continue;
        }

        // Ignore punctuation like , ; ( ) { }
        if (code[i] == ';' || code[i] == ',' || code[i] == '(' || code[i] == ')' || code[i] == '{' || code[i] == '}') {
            i++;
            continue;
        }

        // Unknown symbols
        printf("%c is unknown symbol\n", code[i]);
        i++;
    }

    return 0;
}
